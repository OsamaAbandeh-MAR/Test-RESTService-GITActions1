name: Build and Verify CustomerSearch Service on Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-verify:
    runs-on: windows-latest  # Use Windows Server environment

    steps:
      - name: Checkout code  # Step to checkout the code from the repository
        uses: actions/checkout@v2

      - name: Setup .NET  # Set up .NET SDK for building and running the project
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0'  # Specify the .NET version to use

      - name: Restore dependencies for main project  # Restore project dependencies
        run: dotnet restore CustomerSearch/CustomerSearch.csproj

      - name: Build CustomerSearch service  # Build the project in Release configuration
        run: dotnet build CustomerSearch/CustomerSearch.csproj --configuration Release

      - name: Publish CustomerSearch service  # Publish the project to prepare it for running
        run: dotnet publish CustomerSearch/CustomerSearch.csproj -c Release -o ./publish

      - name: Verify service is running  # Start the service and verify that it responds successfully
        run: |
          # Start the service in the background
          Start-Job -ScriptBlock { Start-Process -NoNewWindow -FilePath "dotnet" -ArgumentList ".\publish\CustomerSearch.dll" }
          Start-Sleep -Seconds 15  # Wait longer to allow the service to start

          # Retry the request multiple times to allow connection
          $maxRetries = 5
          $retryCount = 0
          $success = $false
          while ($retryCount -lt $maxRetries -and -not $success) {
              try {
                  $response = Invoke-WebRequest -Uri http://localhost:5000/api/customer/search -UseBasicParsing
                  if ($response.StatusCode -eq 200) {
                      Write-Host "Service responded successfully."
                      $success = $true
                  }
              } catch {
                  Write-Host "Attempt $($retryCount + 1): Service not reachable. Retrying..."
                  Start-Sleep -Seconds 5
                  $retryCount++
              }
          }
          if (-not $success) {
              throw "Service did not respond successfully after $maxRetries attempts."
          }
        shell: pwsh  # Use PowerShell Core for Windows commands
