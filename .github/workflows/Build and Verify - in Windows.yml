name: Build and Verify CustomerSearch Service on Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-verify:
    runs-on: windows-latest  # Use Windows Server environment

    steps:
      - name: Checkout code  # Step to checkout the code from the repository
        uses: actions/checkout@v2

      - name: Setup .NET  # Set up .NET SDK for building and running the project
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0'  # Specify the .NET version to use

      - name: Restore dependencies for main project  # Restore project dependencies
        run: dotnet restore CustomerSearch/CustomerSearch.csproj

      - name: Build CustomerSearch service  # Build the project in Release configuration
        run: dotnet build CustomerSearch/CustomerSearch.csproj --configuration Release

      - name: Publish CustomerSearch service  # Publish the project to prepare it for running
        run: dotnet publish CustomerSearch/CustomerSearch.csproj -c Release -o ./publish

      - name: Verify service is running  # Start the service and verify that it responds successfully
        run: |
          Start-Process -NoNewWindow -FilePath "dotnet" -ArgumentList ".\publish\CustomerSearch.dll"
          Start-Sleep -Seconds 10  # Wait for the service to start
          $response = Invoke-WebRequest -Uri http://localhost:5000/api/customer/search -UseBasicParsing
          if ($response.StatusCode -ne 200) { throw "Service did not respond with status 200" }
        shell: pwsh  # Use PowerShell Core for Windows commands
